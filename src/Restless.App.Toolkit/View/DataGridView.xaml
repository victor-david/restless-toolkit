<UserControl 
    x:Class="Restless.App.Toolkit.DataGridView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:tk="http://schemas.restless.toolkit.com/2021"
    xmlns:toolkit="clr-namespace:Restless.App.Toolkit" d:DataContext="{d:DesignInstance Type=toolkit:DataGridViewModel}"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <Grid
        tk:Property.ColumnWidths="*,*"
        tk:Property.RowHeights="*,Auto">

        <FlowDocumentScrollViewer Grid.RowSpan="2">
            <FlowDocument>
                <Paragraph>
                    <Bold>DataGrid</Bold> - Derives from
                    <Italic>System.Windows.Controls.DataGrid</Italic>
                    and offers several enhancements.
                </Paragraph>
                <List>
                    <ListItem>
                        <Paragraph>
                            Bindable columns collection.
                            This is an attached property that can be attached to a
                            <Italic>System.Windows.Controls.DataGrid</Italic>
                            also, but to obtain other enhancements, you need to use
                            the toolkit's DataGrid.
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            Bind to multiple selected items.
                            <Italic>SelectedItems</Italic> on a standard WPF data grid
                            is not a dependency property. The
                            <Italic>SelectedItemsList</Italic> property enables you to
                            bind. Must bind one way to source.
                            
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            As you show and hide view models, column state (column order and sort)
                            is automatically saved and restored. You can obtain the state
                            of the columns, save the state to storage (such as a database),
                            and restore when your application starts up again.
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            You can bind a command that will be executed when you right click
                            a column header.
                        </Paragraph>
                    </ListItem>
                </List>
            </FlowDocument>
        </FlowDocumentScrollViewer>

        <tk:DataGrid
            Grid.Column="1"
            HeaderRightClickCommand="{Binding HeaderCommand}"
            ItemsSource="{Binding ListView}"
            SelectedItem="{Binding SelectedItem}"
            SelectedItemsList="{Binding SelectedDataGridItems, Mode=OneWayToSource}"
            tk:DataGridColumns.Columns="{Binding Columns}">

            <DataGrid.ContextMenu>
                <ContextMenu ItemsSource="{Binding MenuItems}"/>
            </DataGrid.ContextMenu>
        </tk:DataGrid>

        <Border
            Grid.Column="1" Grid.Row="1"
            Margin="0,2"
            Height="42"
            BorderThickness="1"
            BorderBrush="{StaticResource DefaultBorderBrush}">

            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{StaticResource DarkForegroundBrush}"
                Text="{Binding ActionMessage}"/>
        </Border>

    </Grid>
</UserControl>