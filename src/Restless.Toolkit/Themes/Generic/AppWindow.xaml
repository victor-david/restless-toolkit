<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:Restless.Toolkit.Core"
    xmlns:con="clr-namespace:Restless.Toolkit.Controls">

    <Style TargetType="Button" x:Key="ButtonTitleBar">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>    
        <Setter Property="Width" Value="44"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="Foreground" Value="{Binding TitleBarButtonBrush, RelativeSource={RelativeSource AncestorType=con:AppWindow}}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="core:Property.RolloverBrush" Value="#FF888888"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                            TextElement.FontSize="{TemplateBinding FontSize}"
                            TextElement.FontStretch="{TemplateBinding FontStretch}"
                            TextElement.FontWeight="{TemplateBinding FontWeight}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=(core:Property.RolloverBrush), RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="CornflowerBlue"/>
            </Trigger>
        </Style.Triggers>

        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="MenuItem">
        <Border x:Name="MainBorder" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Column0" Width="28"/>
                    <ColumnDefinition/>
                    <ColumnDefinition x:Name="Column2" Width="48"/>
                </Grid.ColumnDefinitions>

                <Border 
                    x:Name="CheckBorder"
                    Height="10" Width="10"
                    CornerRadius="1"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="{Binding MenuHighlightBrush, RelativeSource={RelativeSource AncestorType=con:AppWindow}}"
                    Visibility="Collapsed"/>

                <Border 
                    x:Name="IconBorder" 
                    BorderBrush="{Binding MenuHighlightBrush, RelativeSource={RelativeSource AncestorType=con:AppWindow}}" 
                    BorderThickness="1"
                    Height="24" Width="24"
                    Margin="2" Padding="2">
                    <ContentPresenter
                        Content="{TemplateBinding Icon}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"/>
                </Border>

                <ContentPresenter
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>

                <ContentPresenter
                    Grid.Column="2"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    ContentSource="InputGestureText"/>

                <Popup
                    x:Name="Popup"
                    Grid.Column="1"
                    Placement="Bottom"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True"
                    Focusable="False"
                    PopupAnimation="None">

                    <Border BorderBrush="Gray" BorderThickness="1" Background="#fff0f0f0" Opacity="{Binding MenuOpacity, RelativeSource={RelativeSource AncestorType=con:AppWindow}}">
                        <StackPanel IsItemsHost="True"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter TargetName="Column0" Property="Width" Value="0"/>
                <Setter TargetName="Column2" Property="Width" Value="0"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="IconBorder" Property="BorderBrush" Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="MainBorder" Property="Opacity" Value="0.45"/>
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="Icon" Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="CheckBorder" Property="Visibility" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Border" x:Key="BorderMenu">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Style.Resources>
            <Style TargetType="Menu">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="11"/>
                <Setter Property="Foreground" Value="{Binding TitleBarForeground, RelativeSource={RelativeSource AncestorType=con:AppWindow}}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>

                <Style.Resources>
                    <Style TargetType="MenuItem">
                        <Setter Property="Height" Value="28"/>
                        <Setter Property="Padding" Value="6,2"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate}"/>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Foreground" Value="#F0000000"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Role" Value="SubmenuItem"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="LightBlue"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Image" x:Key="ImageTitleBar">
        <Setter Property="Margin" Value="2,0,3,0"/>
        <Setter Property="Width" Value="20"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="TextBlockTitle">
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{Binding TitleBarForeground, RelativeSource={RelativeSource AncestorType=con:AppWindow}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="con:AppWindow" x:Key="AppWindowTemplate">

        <Border 
            Name="MainBorder"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="Transparent">
            <Grid core:Property.RowHeights="29,*">
                <!-- Title bar -->
                <Border 
                    Background="{TemplateBinding TitleBarBackground}" 
                    BorderBrush="{TemplateBinding TitleBarBorderBrush}"
                    BorderThickness="0,0,0,1">

                    <Grid core:Property.ColumnWidths="Auto,Auto,*,Auto,Auto,Auto,Auto">

                        <ContentPresenter Content="{TemplateBinding PathIcon}" Margin="5,0"/>

                        <Border Grid.Column="1" Style="{StaticResource BorderMenu}">
                            <ContentPresenter Content="{TemplateBinding Menu}"/>
                        </Border>

                        <TextBlock
                            Grid.Column="2"
                            Style="{StaticResource TextBlockTitle}"
                            Text="{TemplateBinding Title}"/>


                        <!-- Minimize -->
                        <Button Grid.Column="3" Style="{StaticResource ButtonTitleBar}" Command="{TemplateBinding MinimizeCommand}">
                            <Path Data="M 0,5 10,5"/>
                        </Button>

                        <!-- Maximize -->
                        <Button Name="ButtonMaximize" Grid.Column="4" Style="{StaticResource ButtonTitleBar}" Command="{TemplateBinding ChangeStateCommand}">
                            <Path Data="M 0,0 0,9 9,9 9,0 Z"/>
                        </Button>

                        <!-- Restore -->
                        <Button Name="ButtonRestore" Grid.Column="5" Style="{StaticResource ButtonTitleBar}" Command="{TemplateBinding ChangeStateCommand}">
                            <Path Data="M 0,2 7,2 7,9 0,9 Z M 2,2 2,0 9,0 9,7 7,7"/>
                        </Button>

                        <!-- Close -->
                        <Button Grid.Column="6" Style="{StaticResource ButtonTitleBar}" Command="{TemplateBinding CloseCommand}" core:Property.RolloverBrush="#FFEE0000">
                            <Path Data="M 0,0 9,9 M 0,9 9,0"/>
                        </Button>
                    </Grid>
                </Border>

                <!-- Client area -->
                <Border Grid.Row="1" Background="{TemplateBinding Background}">
                    <ContentPresenter/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="7"/>
                <Setter TargetName="ButtonMaximize" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="ButtonRestore" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="con:AppWindow">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#ff1f3c76"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TitleBarBackground" Value="#ff24292e"/>
        <Setter Property="TitleBarForeground" Value="White"/>
        <Setter Property="TitleBarButtonBrush" Value="#ffa0a0a0"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="25"
                    CornerRadius="0"
                    ResizeBorderThickness="4"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource AppWindowTemplate}"/>
    </Style>
   
</ResourceDictionary>