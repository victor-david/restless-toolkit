<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:keys="clr-namespace:Restless.Toolkit.Resource">

    <!-- Resource dictionary for default styles only -->
    <!-- These do not have a corresponding custom control -->

    <ControlTemplate x:Key="ComboBox.ControlTemplate" TargetType="ComboBox">

        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">

            <ToggleButton
                x:Name="toggleButton"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource {x:Static keys:ResourceKeys.ComboBoxToggleButtonStyleKey}}"/>

            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="True"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="Fade"
                Placement="Bottom">
                <Border
                    x:Name="dropDownBorder"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1,0,1,1"
                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">

                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="13*"/>
                                <ColumnDefinition Width="41*"/>
                            </Grid.ColumnDefinitions>

                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Fill="{Binding Background, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                Grid.ColumnSpan="2"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>

            </Popup>

            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                IsHitTestVisible="False"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>

            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="{x:Static keys:ResourceKeys.DefaultComboBoxStyleKey}" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ComboBoxBackgroundBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static keys:ResourceKeys.ComboBoxBorderBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static keys:ResourceKeys.DefaultForegroundBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static keys:ResourceKeys.DefaultForegroundBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBox.ControlTemplate}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="6"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static keys:ResourceKeys.ComboBoxItemBorderBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>








</ResourceDictionary>